y_simulated <- rbinom(n = 1e4,
size = 605,
prob = thetas_simulated)
mean(y_simulated >= 605 * 0.4)
n_w <- 7706
y_w <- 2654
make_binomial_preds_with_big_numbers <- function(n, a, b){
# uses log transformation to handle big numbers
# may be less precise due to rounding error
y <- 0:n
y_probs <- lchoose(n, y) + lbeta(a + y, b + n - y) - lbeta(a, b)
return(data.frame(values = y,
probs = exp(y_probs)))
}
probs <- make_binomial_preds_with_big_numbers(5, a + y_w, b + n_w - y_w)
sum(probs$probs[probs$values >= 2])
thetas_simulated <- rbeta(n = 1e4,
shape1 = a + y_w,
shape2 = b + n_w - y_w)
y_simulated <- rbinom(n = 1e4,
size = 5,
prob = thetas_simulated)
mean(y_simulated >= 5 * 0.4)
probs <- make_binomial_preds_with_big_numbers(605, a + y_w, b + n_w - y_w)
sum(probs$probs[probs$values >= 605 * 0.4])
thetas_simulated <- rbeta(n = 1e4,
shape1 = a + y_w,
shape2 = b + n_w - y_w)
y_simulated <- rbinom(n = 1e4,
size = 605,
prob = thetas_simulated)
mean(y_simulated >= 6055 * 0.4)
set.seed(10212025)
library(tidyverse)
a <- 50
b <- 120
make_binomial_preds <- function(n, a, b){
y <- 0:n
y_probs <- choose(n, y) * beta(a + y, b + n - y) / beta(a, b)
return(data.frame(values = y,
probs = y_probs))
}
probs <- make_binomial_preds(5, a, b)
sum(probs$probs[probs$values >= 2])
thetas_simulated <- rbeta(n = 1e4,
shape1 = a,
shape2 = b)
y_simulated <- rbinom(n = 1e4,
size = 5,
prob = thetas_simulated)
mean(y_simulated >= 2)
probs <- make_binomial_preds(605, a, b)
sum(probs$probs[probs$values >= 605 * 0.4])
thetas_simulated <- rbeta(n = 1e4,
shape1 = a,
shape2 = b)
y_simulated <- rbinom(n = 1e4,
size = 605,
prob = thetas_simulated)
mean(y_simulated >= 605 * 0.4)
n_w <- 7706
y_w <- 2654
make_binomial_preds_with_big_numbers <- function(n, a, b){
# uses log transformation to handle big numbers
# may be less precise due to rounding error
y <- 0:n
y_probs <- lchoose(n, y) + lbeta(a + y, b + n - y) - lbeta(a, b)
return(data.frame(values = y,
probs = exp(y_probs)))
}
probs <- make_binomial_preds_with_big_numbers(5, a + y_w, b + n_w - y_w)
sum(probs$probs[probs$values >= 2])
thetas_simulated <- rbeta(n = 1e4,
shape1 = a + y_w,
shape2 = b + n_w - y_w)
y_simulated <- rbinom(n = 1e4,
size = 5,
prob = thetas_simulated)
mean(y_simulated >= 5 * 0.4)
probs <- make_binomial_preds_with_big_numbers(605, a + y_w, b + n_w - y_w)
sum(probs$probs[probs$values >= 605 * 0.4])
thetas_simulated <- rbeta(n = 1e4,
shape1 = a + y_w,
shape2 = b + n_w - y_w)
y_simulated <- rbinom(n = 1e4,
size = 605,
prob = thetas_simulated)
mean(y_simulated >= 6055 * 0.4)
set.seed(10212025)
library(tidyverse)
a <- 50
b <- 120
make_binomial_preds <- function(n, a, b){
y <- 0:n
y_probs <- choose(n, y) * beta(a + y, b + n - y) / beta(a, b)
return(data.frame(values = y,
probs = y_probs))
}
probs <- make_binomial_preds(5, a, b)
sum(probs$probs[probs$values >= 2])
thetas_simulated <- rbeta(n = 1e4,
shape1 = a,
shape2 = b)
y_simulated <- rbinom(n = 1e4,
size = 5,
prob = thetas_simulated)
mean(y_simulated >= 2)
probs <- make_binomial_preds(605, a, b)
sum(probs$probs[probs$values >= 605 * 0.4])
thetas_simulated <- rbeta(n = 1e4,
shape1 = a,
shape2 = b)
y_simulated <- rbinom(n = 1e4,
size = 605,
prob = thetas_simulated)
mean(y_simulated >= 605 * 0.4)
n_w <- 7706
y_w <- 2654
make_binomial_preds_with_big_numbers <- function(n, a, b){
# uses log transformation to handle big numbers
# may be less precise due to rounding error
y <- 0:n
y_probs <- lchoose(n, y) + lbeta(a + y, b + n - y) - lbeta(a, b)
return(data.frame(values = y,
probs = exp(y_probs)))
}
probs <- make_binomial_preds_with_big_numbers(5, a + y_w, b + n_w - y_w)
sum(probs$probs[probs$values >= 2])
thetas_simulated <- rbeta(n = 1e4,
shape1 = a + y_w,
shape2 = b + n_w - y_w)
y_simulated <- rbinom(n = 1e4,
size = 5,
prob = thetas_simulated)
mean(y_simulated >= 5 * 0.4)
probs <- make_binomial_preds_with_big_numbers(605, a + y_w, b + n_w - y_w)
sum(probs$probs[probs$values >= 605 * 0.4])
thetas_simulated <- rbeta(n = 1e6,
shape1 = a + y_w,
shape2 = b + n_w - y_w)
y_simulated <- rbinom(n = 1e6,
size = 605,
prob = thetas_simulated)
mean(y_simulated >= 6055 * 0.4)
set.seed(10212025)
library(tidyverse)
a <- 50
b <- 120
make_binomial_preds <- function(n, a, b){
y <- 0:n
y_probs <- choose(n, y) * beta(a + y, b + n - y) / beta(a, b)
return(data.frame(values = y,
probs = y_probs))
}
probs <- make_binomial_preds(5, a, b)
sum(probs$probs[probs$values >= 2])
thetas_simulated <- rbeta(n = 1e4,
shape1 = a,
shape2 = b)
y_simulated <- rbinom(n = 1e4,
size = 5,
prob = thetas_simulated)
mean(y_simulated >= 2)
probs <- make_binomial_preds(605, a, b)
sum(probs$probs[probs$values >= 605 * 0.4])
thetas_simulated <- rbeta(n = 1e4,
shape1 = a,
shape2 = b)
y_simulated <- rbinom(n = 1e4,
size = 605,
prob = thetas_simulated)
mean(y_simulated >= 605 * 0.4)
n_w <- 7706
y_w <- 2654
make_binomial_preds_with_big_numbers <- function(n, a, b){
# uses log transformation to handle big numbers
# may be less precise due to rounding error
y <- 0:n
y_probs <- lchoose(n, y) + lbeta(a + y, b + n - y) - lbeta(a, b)
return(data.frame(values = y,
probs = exp(y_probs)))
}
probs <- make_binomial_preds_with_big_numbers(5, a + y_w, b + n_w - y_w)
sum(probs$probs[probs$values >= 2])
thetas_simulated <- rbeta(n = 1e4,
shape1 = a + y_w,
shape2 = b + n_w - y_w)
y_simulated <- rbinom(n = 1e4,
size = 5,
prob = thetas_simulated)
mean(y_simulated >= 5 * 0.4)
probs <- make_binomial_preds_with_big_numbers(605, a + y_w, b + n_w - y_w)
sum(probs$probs[probs$values >= 605 * 0.4])
set.seed(10212025)
library(tidyverse)
a <- 50
b <- 120
make_binomial_preds <- function(n, a, b){
y <- 0:n
y_probs <- choose(n, y) * beta(a + y, b + n - y) / beta(a, b)
return(data.frame(values = y,
probs = y_probs))
}
probs <- make_binomial_preds(5, a, b)
sum(probs$probs[probs$values >= 2])
thetas_simulated <- rbeta(n = 1e4,
shape1 = a,
shape2 = b)
y_simulated <- rbinom(n = 1e4,
size = 5,
prob = thetas_simulated)
mean(y_simulated >= 2)
probs <- make_binomial_preds(605, a, b)
sum(probs$probs[probs$values >= 605 * 0.4])
thetas_simulated <- rbeta(n = 1e4,
shape1 = a,
shape2 = b)
y_simulated <- rbinom(n = 1e4,
size = 605,
prob = thetas_simulated)
mean(y_simulated >= 605 * 0.4)
n_w <- 7706
y_w <- 2654
make_binomial_preds_with_big_numbers <- function(n, a, b){
# uses log transformation to handle big numbers
# may be less precise due to rounding error
y <- 0:n
y_probs <- lchoose(n, y) + lbeta(a + y, b + n - y) - lbeta(a, b)
return(data.frame(values = y,
probs = exp(y_probs)))
}
probs <- make_binomial_preds_with_big_numbers(5, a + y_w, b + n_w - y_w)
sum(probs$probs[probs$values >= 2])
thetas_simulated <- rbeta(n = 1e4,
shape1 = a + y_w,
shape2 = b + n_w - y_w)
y_simulated <- rbinom(n = 1e4,
size = 5,
prob = thetas_simulated)
mean(y_simulated >= 5 * 0.4)
probs <- make_binomial_preds_with_big_numbers(605, a + y_w, b + n_w - y_w)
sum(probs$probs[probs$values >= 605 * 0.4])
thetas_simulated <- rbeta(n = 1e4,
shape1 = a + y_w,
shape2 = b + n_w - y_w)
y_simulated <- rbinom(n = 1e4,
size = 605,
prob = thetas_simulated)
mean(y_simulated >= 605 * 0.4)
n_d <- 6821
n_d <- 6821
probs <- make_binomial_preds_with_big_numbers(5, a + y_d, b + n_d - y_d)
sum(probs$probs[probs$values >= 2])
probs <- make_binomial_preds_with_big_numbers(5, a + y_d, b + n_d - y_d)
n_d <- 6821
y_d <- 2214
probs <- make_binomial_preds_with_big_numbers(5, a + y_d, b + n_d - y_d)
sum(probs$probs[probs$values >= 2])
set.seed(10212025)
library(tidyverse)
a <- 50
b <- 120
make_binomial_preds <- function(n, a, b){
y <- 0:n
y_probs <- choose(n, y) * beta(a + y, b + n - y) / beta(a, b)
return(data.frame(values = y,
probs = y_probs))
}
probs <- make_binomial_preds(5, a, b)
sum(probs$probs[probs$values >= 2])
thetas_simulated <- rbeta(n = 1e4,
shape1 = a,
shape2 = b)
y_simulated <- rbinom(n = 1e4,
size = 5,
prob = thetas_simulated)
mean(y_simulated >= 2)
probs <- make_binomial_preds(605, a, b)
sum(probs$probs[probs$values >= 605 * 0.4])
thetas_simulated <- rbeta(n = 1e4,
shape1 = a,
shape2 = b)
y_simulated <- rbinom(n = 1e4,
size = 605,
prob = thetas_simulated)
mean(y_simulated >= 605 * 0.4)
n_w <- 7706
y_w <- 2654
make_binomial_preds_with_big_numbers <- function(n, a, b){
# uses log transformation to handle big numbers
# may be less precise due to rounding error
y <- 0:n
y_probs <- lchoose(n, y) + lbeta(a + y, b + n - y) - lbeta(a, b)
return(data.frame(values = y,
probs = exp(y_probs)))
}
probs <- make_binomial_preds_with_big_numbers(5, a + y_w, b + n_w - y_w)
sum(probs$probs[probs$values >= 2])
thetas_simulated <- rbeta(n = 1e4,
shape1 = a + y_w,
shape2 = b + n_w - y_w)
y_simulated <- rbinom(n = 1e4,
size = 5,
prob = thetas_simulated)
mean(y_simulated >= 5 * 0.4)
probs <- make_binomial_preds_with_big_numbers(605, a + y_w, b + n_w - y_w)
sum(probs$probs[probs$values >= 605 * 0.4])
thetas_simulated <- rbeta(n = 1e4,
shape1 = a + y_w,
shape2 = b + n_w - y_w)
y_simulated <- rbinom(n = 1e4,
size = 605,
prob = thetas_simulated)
mean(y_simulated >= 605 * 0.4)
a <- 50
b <- 120
probs <- make_binomial_preds(5, a, b)
sum(probs$probs[probs$values >= 2])
thetas_simulated <- rbeta(n = 1e4,
shape1 = a,
shape2 = b)
y_simulated <- rbinom(n = 1e4,
size = 5,
prob = thetas_simulated)
mean(y_simulated >= 2)
probs <- make_binomial_preds(605, a, b)
sum(probs$probs[probs$values >= 605 * 0.4])
thetas_simulated <- rbeta(n = 1e4,
shape1 = a,
shape2 = b)
y_simulated <- rbinom(n = 1e4,
size = 605,
prob = thetas_simulated)
mean(y_simulated >= 605 * 0.4)
n_d <- 6821
y_d <- 2214
probs <- make_binomial_preds_with_big_numbers(5, a + y_d, b + n_d - y_d)
sum(probs$probs[probs$values >= 2])
thetas_simulated <- rbeta(n = 1e4,
shape1 = a + y_d,
shape2 = b + n_d - y_d)
y_simulated <- rbinom(n = 1e4,
size = 5,
prob = thetas_simulated)
mean(y_simulated >= 5 * 0.4)
probs <- make_binomial_preds_with_big_numbers(605, a + y_d, b + n_d - y_d)
sum(probs$probs[probs$values >= 605 * 0.4])
probs <- make_binomial_preds_with_big_numbers(605, a + y_d, b + n_d - y_d)
sum(probs$probs[probs$values >= 605 * 0.4])
thetas_simulated <- rbeta(n = 1e4,
shape1 = a + y_d,
shape2 = b + n_d - y_d)
y_simulated <- rbinom(n = 1e4,
size = 605,
prob = thetas_simulated)
mean(y_simulated >= 605 * 0.4)
set.seed(10212025)
library(tidyverse)
a <- 50
b <- 120
make_binomial_preds <- function(n, a, b){
y <- 0:n
y_probs <- choose(n, y) * beta(a + y, b + n - y) / beta(a, b)
return(data.frame(values = y,
probs = y_probs))
}
probs <- make_binomial_preds(5, a, b)
sum(probs$probs[probs$values >= 2])
thetas_simulated <- rbeta(n = 1e4,
shape1 = a,
shape2 = b)
y_simulated <- rbinom(n = 1e4,
size = 5,
prob = thetas_simulated)
mean(y_simulated >= 2)
probs <- make_binomial_preds(605, a, b)
sum(probs$probs[probs$values >= 605 * 0.4])
thetas_simulated <- rbeta(n = 1e4,
shape1 = a,
shape2 = b)
y_simulated <- rbinom(n = 1e4,
size = 605,
prob = thetas_simulated)
mean(y_simulated >= 605 * 0.4)
n_w <- 7706
y_w <- 2654
make_binomial_preds_with_big_numbers <- function(n, a, b){
# uses log transformation to handle big numbers
# may be less precise due to rounding error
y <- 0:n
y_probs <- lchoose(n, y) + lbeta(a + y, b + n - y) - lbeta(a, b)
return(data.frame(values = y,
probs = exp(y_probs)))
}
probs <- make_binomial_preds_with_big_numbers(5, a + y_w, b + n_w - y_w)
sum(probs$probs[probs$values >= 2])
thetas_simulated <- rbeta(n = 1e4,
shape1 = a + y_w,
shape2 = b + n_w - y_w)
y_simulated <- rbinom(n = 1e4,
size = 5,
prob = thetas_simulated)
mean(y_simulated >= 5 * 0.4)
probs <- make_binomial_preds_with_big_numbers(605, a + y_w, b + n_w - y_w)
sum(probs$probs[probs$values >= 605 * 0.4])
thetas_simulated <- rbeta(n = 1e4,
shape1 = a + y_w,
shape2 = b + n_w - y_w)
y_simulated <- rbinom(n = 1e4,
size = 605,
prob = thetas_simulated)
mean(y_simulated >= 605 * 0.4)
a <- 50
b <- 120
probs <- make_binomial_preds(5, a, b)
sum(probs$probs[probs$values >= 2])
thetas_simulated <- rbeta(n = 1e4,
shape1 = a,
shape2 = b)
y_simulated <- rbinom(n = 1e4,
size = 5,
prob = thetas_simulated)
mean(y_simulated >= 2)
probs <- make_binomial_preds(605, a, b)
sum(probs$probs[probs$values >= 605 * 0.4])
thetas_simulated <- rbeta(n = 1e4,
shape1 = a,
shape2 = b)
y_simulated <- rbinom(n = 1e4,
size = 605,
prob = thetas_simulated)
mean(y_simulated >= 605 * 0.4)
n_d <- 6821
y_d <- 2214
probs <- make_binomial_preds_with_big_numbers(5, a + y_d, b + n_d - y_d)
sum(probs$probs[probs$values >= 2])
thetas_simulated <- rbeta(n = 1e4,
shape1 = a + y_d,
shape2 = b + n_d - y_d)
y_simulated <- rbinom(n = 1e4,
size = 5,
prob = thetas_simulated)
mean(y_simulated >= 5 * 0.4)
probs <- make_binomial_preds_with_big_numbers(605, a + y_d, b + n_d - y_d)
sum(probs$probs[probs$values >= 605 * 0.4])
thetas_simulated <- rbeta(n = 1e6,
shape1 = a + y_d,
shape2 = b + n_d - y_d)
y_simulated <- rbinom(n = 1e6,
size = 605,
prob = thetas_simulated)
mean(y_simulated >= 605 * 0.4)
install.packages("remotes")
remotes::install_github("rstudio/tensorflow")
reticulate::install_python()
install.packages("reticulate")
reticulate::install_python()
keras::install_keras()
keras::install_keras()
install.packages("keras")
keras::install_keras()
keras::install_keras()
keras::install_keras()
reticulate::virtualenv_remove("r-tensorflow")
reticulate::install_miniconda()
keras::install_keras()
keras::install_keras()
rm(list = ls())
theta <- 3.1
goals <- c(1, 2, 7, 2, 2, 1, 2, 5, 3, 4,
2, 5, 6, 8, 2, 3, 2, 3, 8)
prod(dpois(goals,
lambda = 3.1))
prod(dpois(goals,
lambda = 2.5))
prod(dpois(goals,
lambda = 68/19))
source("~/GitHub/AmazonEmployeeAccess/AmazonAnalysis.R", echo = TRUE)
# Setup -----------------------------------------------------------------
# clearing everything
# 281258
rm(list = ls())
# loading in libraries
library(tidyverse)
library(discrim)
library(naivebayes)
library(tidymodels)
setwd("~/GitHub/AmazonEmployeeAccess")
# Setup -----------------------------------------------------------------
# clearing everything
# 309362
rm(list = ls())
# loading in libraries
library(tidyverse)
library(discrim)
library(naivebayes)
library(tidymodels)
library(embed)
library(lme4)
library(vroom)
library(ranger)
library(themis)
# Reading In Data -------------------------------------------------------
# 1050 columns
amazon_train <- vroom("amazon-employee-access-challenge/train.csv") %>%
mutate(ACTION = factor(ACTION))
amazon_test <- vroom("amazon-employee-access-challenge/test.csv")
10/32769
32769*0.0003
5/32769
32769*0.0001
32769*0.001
